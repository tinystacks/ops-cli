Console:
  name: console
  providers:
    AwsLocalProvider:
      id: AwsLocalProvider
      type: AwsCredentialsProvider
      credentials:
        profileName: default
        # when deploying hosted version
        # AwsAccessKeyId: 
        # AwsSecretAccessKey:
    UtilizationProvider:
      type: AwsUtilizationProvider
  dashboards:
    Ecs Dashboard:
      parameters:
        - name: clusterName
          default: ENTER CLUSTER NAME HERE
        - name: serviceName
          default: ENTER SERVICE NAME HERE
        - name: region
          default: us-east-1
      route: main
      widgets:
        - $ref: '#/Console/widgets/EcsInfo'
        - $ref: '#/Console/widgets/EcsDeployments'
        - $ref: '#/Console/widgets/Metrics'
        - $ref: '#/Console/widgets/Logs'
        - $ref: '#/Console/widgets/UsefulCommands'
    Utilization and Cost:
      route: utilization-and-cost
      widgets: 
        - $ref: '#/Console/widgets/AwsUtilizationRecommendations'
  widgets:
    AwsUtilizationRecommendations:
      type: AwsUtilizationRecommendations
      displayName: TinyStacks Recommendations
      providers: 
        - $ref: '#/Console/providers/AwsLocalProvider'
        - $ref: '#/Console/providers/UtilizationProvider'
    EcsInfo:
      type: AwsEcsInfo
      displayName: Service Information
      providers:
        - $ref: '#/Console/providers/AwsLocalProvider'
      region: $param.region
      clusterName: $param.clusterName
      serviceName: $param.serviceName
    EcsDeployments:
      type: AwsEcsDeployments
      displayName: Service Deployments
      providers:
        - $ref: '#/Console/providers/AwsLocalProvider'
      region:
        $ref: '#/Console/widgets/EcsInfo'
        path: region
      clusterName: $param.clusterName
      serviceName: $param.serviceName
    Logs:
      type: AwsCloudWatchLogs
      displayName: Service Logs
      region:
        $ref: '#/Console/widgets/EcsInfo'
        path: region
      providers:
        - $ref: '#/Console/providers/AwsLocalProvider'
      logGroupName: 
        $ref: '#/Console/widgets/EcsInfo'
        path: images[0].cwLogsGroupArn
      timeRange:
        time: 12
        unit: h
    Metrics:
      type: Grid
      displayName: ECS Metrics
      orientation: horizontal
      children:
        - $ref: '#/Console/widgets/CPUMetrics'
        - $ref: '#/Console/widgets/MemoryMetrics'
        - $ref: '#/Console/widgets/Capacity'
        - $ref: '#/Console/widgets/Reservations'
    CPUMetrics:
      type: AwsCloudWatchMetricGraph
      displayName: CPU Utilization Details
      region:
        $ref: '#/Console/widgets/EcsInfo'
        path: region
      period: 300
      providers:
        - $ref: '#/Console/providers/AwsLocalProvider'
      timeRange:
        time: 1
        unit: h
      metrics:
        - metricNamespace: AWS/ECS
          metricName: CPUUtilization
          metricDisplayName: 'Average'
          statistic: Average
          dimensions:
            - key: ClusterName
              value: $param.clusterName
            - key: ServiceName
              value: $param.serviceName
        - metricNamespace: AWS/ECS
          metricName: CPUUtilization
          metricDisplayName: 'Max'
          statistic: Maximum
          dimensions:
            - key: ClusterName
              value: $param.clusterName
            - key: ServiceName
              value: $param.serviceName
        - metricNamespace: AWS/ECS
          metricName: CPUUtilization
          metricDisplayName: 'Min'
          statistic: Minimum
          dimensions:
            - key: ClusterName
              value: $param.clusterName
            - key: ServiceName
              value: $param.serviceName
    MemoryMetrics:
      type: AwsCloudWatchMetricGraph
      displayName: Memory Utilization Details
      region:
        $ref: '#/Console/widgets/EcsInfo'
        path: region
      period: 300
      providers:
        - $ref: '#/Console/providers/AwsLocalProvider'
      timeRange:
        time: 1
        unit: h
      metrics:
        - metricNamespace: AWS/ECS
          metricName: MemoryUtilization
          metricDisplayName: 'Average'
          statistic: Average
          dimensions:
            - key: ClusterName
              value: $param.clusterName
            - key: ServiceName
              value: $param.serviceName
        - metricNamespace: AWS/ECS
          metricName: MemoryUtilization
          metricDisplayName: 'Max'
          statistic: Maximum
          dimensions:
            - key: ClusterName
              value: $param.clusterName
            - key: ServiceName
              value: $param.serviceName
        - metricNamespace: AWS/ECS
          metricName: MemoryUtilization
          metricDisplayName: 'Min'
          statistic: Minimum
          dimensions:
            - key: ClusterName
              value: $param.clusterName
            - key: ServiceName
              value: $param.serviceName
    Capacity:
      type: AwsCloudWatchMetricGraph
      displayName: Capacity
      region:
        $ref: '#/Console/widgets/EcsInfo'
        path: region
      period: 300
      providers:
        - $ref: '#/Console/providers/AwsLocalProvider'
      timeRange:
        time: 1
        unit: h
      metrics:
        - metricNamespace: ECS/ContainerInsights
          metricName: RunningTaskCount
          metricDisplayName: 'Running Tasks'
          statistic: Average
          dimensions:
            - key: ClusterName
              value: $param.clusterName
            - key: ServiceName
              value: $param.serviceName
        - metricNamespace: ECS/ContainerInsights
          metricName: PendingTaskCount
          metricDisplayName: 'Pending Tasks'
          statistic: Average
          dimensions:
            - key: ClusterName
              value: $param.clusterName
            - key: ServiceName
              value: $param.serviceName
        - metricNamespace: ECS/ContainerInsights
          metricName: DesiredTaskCount
          metricDisplayName: 'Desired Tasks'
          statistic: Average
          dimensions:
            - key: ClusterName
              value: $param.clusterName
            - key: ServiceName
              value: $param.serviceName
    Reservations:
      type: AwsCloudWatchMetricGraph
      displayName: Resource Reservations
      region:
        $ref: '#/Console/widgets/EcsInfo'
        path: region
      period: 300
      providers:
        - $ref: '#/Console/providers/AwsLocalProvider'
      timeRange:
        time: 1
        unit: h
      metrics:
        - metricNamespace: ECS/ContainerInsights
          metricName: CpuReserved
          metricDisplayName: 'Reserved CPU'
          statistic: Average
          dimensions:
            - key: ClusterName
              value: $param.clusterName
            - key: ServiceName
              value: $param.serviceName
        - metricNamespace: ECS/ContainerInsights
          metricName: MemoryReserved
          metricDisplayName: 'Memory Reserved'
          statistic: Average
          dimensions:
            - key: ClusterName
              value: $param.clusterName
            - key: ServiceName
              value: $param.serviceName
    UsefulCommands:
      type: Tabs
      displayName: Useful ECS Commands
      tabNames:
        - Running proccesses
        - Container disk util
        - Network connectivity
      children:
        - $ref: '#/Console/widgets/EcsProcesses'
        - $ref: '#/Console/widgets/EcsDiskUtil'
        - $ref: '#/Console/widgets/EcsNetworkConnectivity'
    EcsProcesses:
      type: Cli
      displayName: List processes
      providers:
        - $ref: '#/Console/providers/AwsLocalProvider'
      environmentVariables:
        AWS_REGION: $param.region
        CLUSTER_NAME: $param.clusterName
        CONTAINER_NAME:
          $ref: '#/Console/widgets/EcsInfo'
          path: images[0].containerId
      command: >
        aws ecs list-tasks --cluster $CLUSTER_NAME | jq '[.taskArns[0]][0]' | xargs -I{} sh -c 'aws ecs execute-command --cluster $CLUSTER_NAME --task {} --container $CONTAINER_NAME --command "ps aux" --interactive';
    EcsDiskUtil:
      type: Cli
      displayName: Show Disk Utils
      providers:
        - $ref: '#/Console/providers/AwsLocalProvider'
      environmentVariables:
        AWS_REGION: $param.region
        CLUSTER_NAME: $param.clusterName
        CONTAINER_NAME:
          $ref: '#/Console/widgets/EcsInfo'
          path: images[0].containerId
      command: >
        aws ecs list-tasks --cluster $CLUSTER_NAME | jq '[.taskArns[0]][0]' | xargs -I{} bash -c 'aws ecs execute-command --cluster $CLUSTER_NAME --task {} --container $CONTAINER_NAME --command "df" --interactive';
    EcsNetworkConnectivity:
      type: Cli
      displayName: Internet Connectivity
      providers:
        - $ref: '#/Console/providers/AwsLocalProvider'
      environmentVariables:
        AWS_REGION: $param.region
        CLUSTER_NAME: $param.clusterName
        CONTAINER_NAME:
          $ref: '#/Console/widgets/EcsInfo'
          path: images[0].containerId
      command: >
        aws ecs list-tasks --cluster $CLUSTER_NAME | jq '[.taskArns[0]][0]' | xargs -I{} bash -c 'aws ecs execute-command --cluster $CLUSTER_NAME --task {} --container $CONTAINER_NAME --command "curl -k https://example.com" --interactive';
  dependencies:
    Tabs: '@tinystacks/ops-core-widgets'
    Grid: '@tinystacks/ops-core-widgets'
    Cli:  '@tinystacks/ops-core-widgets'
    AwsCloudWatchLogs:        '@tinystacks/ops-aws-core-widgets'
    AwsCredentialsProvider:   '@tinystacks/ops-aws-core-widgets'
    AwsCloudWatchMetricGraph: '@tinystacks/ops-aws-core-widgets'
    AwsEcsInfo:               '@tinystacks/ops-aws-core-widgets'
    AwsEcsDeployments:        '@tinystacks/ops-aws-core-widgets'
    AwsUtilizationProvider:        '@tinystacks/ops-aws-utilization-widgets'
    AwsUtilizationRecommendations: '@tinystacks/ops-aws-utilization-widgets'